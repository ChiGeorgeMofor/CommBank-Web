import React, { useState } from 'react';
import styled from 'styled-components';
import EmojiPicker from './EmojiPicker';
import { useDispatch } from 'react-redux';
import { updateGoalRedux } from '../../store/goalSlice';
import { Goal } from '../../models/Goal';

type EmojiPickerContainerProps = { isOpen: boolean; hasIcon: boolean };

const EmojiPickerContainer = styled.div<EmojiPickerContainerProps>`
  display: ${(props) => (props.isOpen ? 'flex' : 'none')};
  position: absolute;
  top: ${(props) => (props.hasIcon ? '10rem' : '2rem')};
  left: 0;
`;

export function GoalManager(props: Props) {
  const [emojiPickerIsOpen, setEmojiPickerIsOpen] = useState(false);
  const [icon, setIcon] = useState<string | null>(props.goal.icon);
  const dispatch = useDispatch();

  const hasIcon = () => icon != null;

  const pickEmojiOnClick = (emoji: BaseEmoji, event: React.MouseEvent) => {
    event.stopPropagation();

    setIcon(emoji.native);
    setEmojiPickerIsOpen(false);

    const updatedGoal: Goal = {
      ...props.goal,
      icon: emoji.native ?? props.goal.icon,
      name: props.goal.name,
      targetDate: props.goal.targetDate,
      targetAmount: props.goal.targetAmount,
    };

    dispatch(updateGoalRedux(updatedGoal));

    // TODO(TASK-3) Update database
  };

  return (
    <>
      {/* Other components */}

      <EmojiPickerContainer
        isOpen={emojiPickerIsOpen}
        hasIcon={hasIcon()}
        onClick={(event) => event.stopPropagation()}
      >
        <EmojiPicker onClick={pickEmojiOnClick} />
      </EmojiPickerContainer>

      {/* Other components */}
    </>
  );
}
